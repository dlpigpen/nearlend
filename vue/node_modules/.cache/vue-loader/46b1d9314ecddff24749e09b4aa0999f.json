{"remainingRequest":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue?vue&type=template&id=469af010","dependencies":[{"path":"/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue","mtime":1639796817911},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGJ1dHRvbiBAY2xpY2s9ImxvZ2luIj5sb2dpbjwvYnV0dG9uPgogIDxidXR0b24gQGNsaWNrPSJzdXBwbHkiPnN1cHBseTwvYnV0dG9uPgogIDxidXR0b24gQGNsaWNrPSJpbmNyZW1lbnQiPnRlc3QxPC9idXR0b24+CiAgPGJ1dHRvbiBAY2xpY2s9ImdldEFtb3VudCI+Z2V0QW1vdW50PC9idXR0b24+CiAgPGJ1dHRvbiBAY2xpY2s9IndpdGhkcmF3X3N1cHBseSI+d2l0aGRyYXdfc3VwcGx5PC9idXR0b24+Cg=="},{"version":3,"sources":["/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxfile":"/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue","sourceRoot":"","sourcesContent":["<template>\n  <button @click=\"login\">login</button>\n  <button @click=\"supply\">supply</button>\n  <button @click=\"increment\">test1</button>\n  <button @click=\"getAmount\">getAmount</button>\n  <button @click=\"withdraw_supply\">withdraw_supply</button>\n</template>\n\n<script>\nimport * as nearAPI from \"near-api-js\";\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      nearConfig: {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: \"sub.duyhoag.testnet\",\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n      },\n      contract: null,\n      wallet:null,\n      near: null,\n    };\n  },\n  methods: {\n    increment() {\n      this.contract.test1().then(console.log);\n    },\n\n    supply(){\n      console.log(this.contract, 'aa')\n      this.contract.supply({}, 100000000000000, 2).then(console.log);\n    },\n\n    login() {\n      this.walletConnection.requestSignIn(\n        \"sub.duyhoag.testnet\",\n        \"Rust Counter Example\"\n      );\n    },\n    getAmount() {\n      this.contract.get_account().then(console.log);\n    },\n\n    withdraw_supply() {\n      this.contract.withdraw_supply({},100000000000000, 2000000000000000000000000).then(console.log)\n    },\n\n    async connect(nearConfig) {\n      // Connects to NEAR and provides `near`, `walletAccount` and `contract` objects in `this` scope\n      // Initializing connection to the NEAR node.\n      this.near = await nearAPI.connect({\n        deps: {\n          keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\n        },\n        ...nearConfig,\n      });\n\n      // Needed to access wallet login\n      this.walletConnection = new nearAPI.WalletConnection(this.near);\n\n      // Initializing our contract APIs by contract name and configuration.\n      this.contract = await new nearAPI.Contract(\n        this.walletConnection.account(),\n        nearConfig.contractName,\n        {\n          // View methods are read-only â€“ they don't modify the state, but usually return some value\n          viewMethods: [\"get_num\", \"get_total_pool_balance\", \"get_account\"],\n          // Change methods can modify the state, but you don't receive the returned value when called\n          changeMethods: [\"increment\", \"decrement\", \"reset\", \"supply\", \"withdraw_supply\"],\n          // Sender is the account ID to initialize transactions.\n          // getAccountId() will return empty string if user is still unauthorized\n          // sender: this.walletConnection.getAccountId()\n        }\n      );\n    },\n  },\n  async mounted() {\n    await this.connect(this.nearConfig);\n  },\n};\n</script>\n"]}]}