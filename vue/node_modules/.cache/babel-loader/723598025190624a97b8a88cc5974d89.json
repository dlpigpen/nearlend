{"remainingRequest":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/babel-loader/lib/index.js!/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue","mtime":1639796817911},{"path":"/home/duyhoang/Desktop/projects/near-vue2/babel.config.js","mtime":1639768591159},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZHV5aG9hbmcvRGVza3RvcC9wcm9qZWN0cy9uZWFyLXZ1ZTIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZHV5aG9hbmcvRGVza3RvcC9wcm9qZWN0cy9uZWFyLXZ1ZTIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAqIGFzIG5lYXJBUEkgZnJvbSAibmVhci1hcGktanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhlbGxvV29ybGQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuZWFyQ29uZmlnOiB7CiAgICAgICAgbmV0d29ya0lkOiAidGVzdG5ldCIsCiAgICAgICAgbm9kZVVybDogImh0dHBzOi8vcnBjLnRlc3RuZXQubmVhci5vcmciLAogICAgICAgIGNvbnRyYWN0TmFtZTogInN1Yi5kdXlob2FnLnRlc3RuZXQiLAogICAgICAgIHdhbGxldFVybDogImh0dHBzOi8vd2FsbGV0LnRlc3RuZXQubmVhci5vcmciLAogICAgICAgIGhlbHBlclVybDogImh0dHBzOi8vaGVscGVyLnRlc3RuZXQubmVhci5vcmciCiAgICAgIH0sCiAgICAgIGNvbnRyYWN0OiBudWxsLAogICAgICB3YWxsZXQ6IG51bGwsCiAgICAgIG5lYXI6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbmNyZW1lbnQ6IGZ1bmN0aW9uIGluY3JlbWVudCgpIHsKICAgICAgdGhpcy5jb250cmFjdC50ZXN0MSgpLnRoZW4oY29uc29sZS5sb2cpOwogICAgfSwKICAgIHN1cHBseTogZnVuY3Rpb24gc3VwcGx5KCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmNvbnRyYWN0LCAnYWEnKTsKICAgICAgdGhpcy5jb250cmFjdC5zdXBwbHkoe30sIDEwMDAwMDAwMDAwMDAwMCwgMikudGhlbihjb25zb2xlLmxvZyk7CiAgICB9LAogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKCkgewogICAgICB0aGlzLndhbGxldENvbm5lY3Rpb24ucmVxdWVzdFNpZ25Jbigic3ViLmR1eWhvYWcudGVzdG5ldCIsICJSdXN0IENvdW50ZXIgRXhhbXBsZSIpOwogICAgfSwKICAgIGdldEFtb3VudDogZnVuY3Rpb24gZ2V0QW1vdW50KCkgewogICAgICB0aGlzLmNvbnRyYWN0LmdldF9hY2NvdW50KCkudGhlbihjb25zb2xlLmxvZyk7CiAgICB9LAogICAgd2l0aGRyYXdfc3VwcGx5OiBmdW5jdGlvbiB3aXRoZHJhd19zdXBwbHkoKSB7CiAgICAgIHRoaXMuY29udHJhY3Qud2l0aGRyYXdfc3VwcGx5KHt9LCAxMDAwMDAwMDAwMDAwMDAsIDIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDApLnRoZW4oY29uc29sZS5sb2cpOwogICAgfSwKICAgIGNvbm5lY3Q6IGZ1bmN0aW9uIGNvbm5lY3QobmVhckNvbmZpZykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBuZWFyQVBJLmNvbm5lY3QoX29iamVjdFNwcmVhZCh7CiAgICAgICAgICAgICAgICAgIGRlcHM6IHsKICAgICAgICAgICAgICAgICAgICBrZXlTdG9yZTogbmV3IG5lYXJBUEkua2V5U3RvcmVzLkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZSgpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sIG5lYXJDb25maWcpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMubmVhciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAvLyBOZWVkZWQgdG8gYWNjZXNzIHdhbGxldCBsb2dpbgogICAgICAgICAgICAgICAgX3RoaXMud2FsbGV0Q29ubmVjdGlvbiA9IG5ldyBuZWFyQVBJLldhbGxldENvbm5lY3Rpb24oX3RoaXMubmVhcik7IC8vIEluaXRpYWxpemluZyBvdXIgY29udHJhY3QgQVBJcyBieSBjb250cmFjdCBuYW1lIGFuZCBjb25maWd1cmF0aW9uLgoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBuZWFyQVBJLkNvbnRyYWN0KF90aGlzLndhbGxldENvbm5lY3Rpb24uYWNjb3VudCgpLCBuZWFyQ29uZmlnLmNvbnRyYWN0TmFtZSwgewogICAgICAgICAgICAgICAgICAvLyBWaWV3IG1ldGhvZHMgYXJlIHJlYWQtb25seSDigJMgdGhleSBkb24ndCBtb2RpZnkgdGhlIHN0YXRlLCBidXQgdXN1YWxseSByZXR1cm4gc29tZSB2YWx1ZQogICAgICAgICAgICAgICAgICB2aWV3TWV0aG9kczogWyJnZXRfbnVtIiwgImdldF90b3RhbF9wb29sX2JhbGFuY2UiLCAiZ2V0X2FjY291bnQiXSwKICAgICAgICAgICAgICAgICAgLy8gQ2hhbmdlIG1ldGhvZHMgY2FuIG1vZGlmeSB0aGUgc3RhdGUsIGJ1dCB5b3UgZG9uJ3QgcmVjZWl2ZSB0aGUgcmV0dXJuZWQgdmFsdWUgd2hlbiBjYWxsZWQKICAgICAgICAgICAgICAgICAgY2hhbmdlTWV0aG9kczogWyJpbmNyZW1lbnQiLCAiZGVjcmVtZW50IiwgInJlc2V0IiwgInN1cHBseSIsICJ3aXRoZHJhd19zdXBwbHkiXSAvLyBTZW5kZXIgaXMgdGhlIGFjY291bnQgSUQgdG8gaW5pdGlhbGl6ZSB0cmFuc2FjdGlvbnMuCiAgICAgICAgICAgICAgICAgIC8vIGdldEFjY291bnRJZCgpIHdpbGwgcmV0dXJuIGVtcHR5IHN0cmluZyBpZiB1c2VyIGlzIHN0aWxsIHVuYXV0aG9yaXplZAogICAgICAgICAgICAgICAgICAvLyBzZW5kZXI6IHRoaXMud2FsbGV0Q29ubmVjdGlvbi5nZXRBY2NvdW50SWQoKQoKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBfdGhpcy5jb250cmFjdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5jb25uZWN0KF90aGlzMi5uZWFyQ29uZmlnKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue"],"names":[],"mappings":";;;AASA,OAAO,KAAK,OAAZ,MAAyB,aAAzB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,YADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,UAAU,EAAE;AACV,QAAA,SAAS,EAAE,SADD;AAEV,QAAA,OAAO,EAAE,8BAFC;AAGV,QAAA,YAAY,EAAE,qBAHJ;AAIV,QAAA,SAAS,EAAE,iCAJD;AAKV,QAAA,SAAS,EAAE;AALD,OADP;AAQL,MAAA,QAAQ,EAAE,IARL;AASL,MAAA,MAAM,EAAC,IATF;AAUL,MAAA,IAAI,EAAE;AAVD,KAAP;AAYD,GAfY;AAgBb,EAAA,OAAO,EAAE;AACP,IAAA,SADO,uBACK;AACV,WAAK,QAAL,CAAc,KAAd,GAAsB,IAAtB,CAA2B,OAAO,CAAC,GAAnC;AACD,KAHM;AAKP,IAAA,MALO,oBAKC;AACN,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,QAAjB,EAA2B,IAA3B;AACA,WAAK,QAAL,CAAc,MAAd,CAAqB,EAArB,EAAyB,eAAzB,EAA0C,CAA1C,EAA6C,IAA7C,CAAkD,OAAO,CAAC,GAA1D;AACD,KARM;AAUP,IAAA,KAVO,mBAUC;AACN,WAAK,gBAAL,CAAsB,aAAtB,CACE,qBADF,EAEE,sBAFF;AAID,KAfM;AAgBP,IAAA,SAhBO,uBAgBK;AACV,WAAK,QAAL,CAAc,WAAd,GAA4B,IAA5B,CAAiC,OAAO,CAAC,GAAzC;AACD,KAlBM;AAoBP,IAAA,eApBO,6BAoBW;AAChB,WAAK,QAAL,CAAc,eAAd,CAA8B,EAA9B,EAAiC,eAAjC,EAAkD,yBAAlD,EAA6E,IAA7E,CAAkF,OAAO,CAAC,GAA1F;AACD,KAtBM;AAwBD,IAAA,OAxBC,mBAwBO,UAxBP,EAwBmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGN,OAAO,CAAC,OAAR;AAChB,kBAAA,IAAI,EAAE;AACJ,oBAAA,QAAQ,EAAE,IAAI,OAAO,CAAC,SAAR,CAAkB,2BAAtB;AADN;AADU,mBAIb,UAJa,EAHM;;AAAA;AAGxB,gBAAA,KAAI,CAAC,IAHmB;AAUxB;AACA,gBAAA,KAAI,CAAC,gBAAL,GAAwB,IAAI,OAAO,CAAC,gBAAZ,CAA6B,KAAI,CAAC,IAAlC,CAAxB,CAXwB,CAaxB;;AAbwB;AAAA,uBAcF,IAAI,OAAO,CAAC,QAAZ,CACpB,KAAI,CAAC,gBAAL,CAAsB,OAAtB,EADoB,EAEpB,UAAU,CAAC,YAFS,EAGpB;AACE;AACA,kBAAA,WAAW,EAAE,CAAC,SAAD,EAAY,wBAAZ,EAAsC,aAAtC,CAFf;AAGE;AACA,kBAAA,aAAa,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,OAA3B,EAAoC,QAApC,EAA8C,iBAA9C,CAJjB,CAKE;AACA;AACA;;AAPF,iBAHoB,CAdE;;AAAA;AAcxB,gBAAA,KAAI,CAAC,QAdmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BzB;AAnDM,GAhBI;AAqEP,EAAA,OArEO,qBAqEG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACR,MAAI,CAAC,OAAL,CAAa,MAAI,CAAC,UAAlB,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEf;AAvEY,CAAf","sourcesContent":["<template>\n  <button @click=\"login\">login</button>\n  <button @click=\"supply\">supply</button>\n  <button @click=\"increment\">test1</button>\n  <button @click=\"getAmount\">getAmount</button>\n  <button @click=\"withdraw_supply\">withdraw_supply</button>\n</template>\n\n<script>\nimport * as nearAPI from \"near-api-js\";\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      nearConfig: {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: \"sub.duyhoag.testnet\",\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n      },\n      contract: null,\n      wallet:null,\n      near: null,\n    };\n  },\n  methods: {\n    increment() {\n      this.contract.test1().then(console.log);\n    },\n\n    supply(){\n      console.log(this.contract, 'aa')\n      this.contract.supply({}, 100000000000000, 2).then(console.log);\n    },\n\n    login() {\n      this.walletConnection.requestSignIn(\n        \"sub.duyhoag.testnet\",\n        \"Rust Counter Example\"\n      );\n    },\n    getAmount() {\n      this.contract.get_account().then(console.log);\n    },\n\n    withdraw_supply() {\n      this.contract.withdraw_supply({},100000000000000, 2000000000000000000000000).then(console.log)\n    },\n\n    async connect(nearConfig) {\n      // Connects to NEAR and provides `near`, `walletAccount` and `contract` objects in `this` scope\n      // Initializing connection to the NEAR node.\n      this.near = await nearAPI.connect({\n        deps: {\n          keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\n        },\n        ...nearConfig,\n      });\n\n      // Needed to access wallet login\n      this.walletConnection = new nearAPI.WalletConnection(this.near);\n\n      // Initializing our contract APIs by contract name and configuration.\n      this.contract = await new nearAPI.Contract(\n        this.walletConnection.account(),\n        nearConfig.contractName,\n        {\n          // View methods are read-only – they don't modify the state, but usually return some value\n          viewMethods: [\"get_num\", \"get_total_pool_balance\", \"get_account\"],\n          // Change methods can modify the state, but you don't receive the returned value when called\n          changeMethods: [\"increment\", \"decrement\", \"reset\", \"supply\", \"withdraw_supply\"],\n          // Sender is the account ID to initialize transactions.\n          // getAccountId() will return empty string if user is still unauthorized\n          // sender: this.walletConnection.getAccountId()\n        }\n      );\n    },\n  },\n  async mounted() {\n    await this.connect(this.nearConfig);\n  },\n};\n</script>\n"],"sourceRoot":""}]}