{"remainingRequest":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/babel-loader/lib/index.js!/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue?vue&type=template&id=469af010","dependencies":[{"path":"/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue","mtime":1639796817911},{"path":"/home/duyhoang/Desktop/projects/near-vue2/babel.config.js","mtime":1639768591159},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duyhoang/Desktop/projects/near-vue2/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMubG9naW4gJiYgJG9wdGlvbnMubG9naW4uYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sICJsb2dpbiIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnN1cHBseSAmJiAkb3B0aW9ucy5zdXBwbHkuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sICJzdXBwbHkiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgb25DbGljazogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5pbmNyZW1lbnQgJiYgJG9wdGlvbnMuaW5jcmVtZW50LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAidGVzdDEiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgb25DbGljazogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5nZXRBbW91bnQgJiYgJG9wdGlvbnMuZ2V0QW1vdW50LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAiZ2V0QW1vdW50IiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMud2l0aGRyYXdfc3VwcGx5ICYmICRvcHRpb25zLndpdGhkcmF3X3N1cHBseS5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIndpdGhkcmF3X3N1cHBseSIpXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9"},{"version":3,"sources":["/home/duyhoang/Desktop/projects/near-vue2/src/components/HelloWorld.vue"],"names":[],"mappings":";;6DACE,mBAAA,CAAqC,QAArC,EAAqC;AAA5B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,KAAA,IAAA,QAAA,CAAA,KAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAuB,GAArC,EAAuB,OAAvB,C,EACA,mBAAA,CAAuC,QAAvC,EAAuC;AAA9B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,MAAA,IAAA,QAAA,CAAA,MAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAyB,GAAvC,EAAwB,QAAxB,C,EACA,mBAAA,CAAyC,QAAzC,EAAyC;AAAhC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,SAAA,IAAA,QAAA,CAAA,SAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA2B,GAAzC,EAA2B,OAA3B,C,EACA,mBAAA,CAA6C,QAA7C,EAA6C;AAApC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,SAAA,IAAA,QAAA,CAAA,SAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA+B,GAA7C,EAA2B,WAA3B,C,EACA,mBAAA,CAAyD,QAAzD,EAAyD;AAAhD,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,eAAA,IAAA,QAAA,CAAA,eAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA2C,GAAzD,EAAiC,iBAAjC,C","sourcesContent":["<template>\n  <button @click=\"login\">login</button>\n  <button @click=\"supply\">supply</button>\n  <button @click=\"increment\">test1</button>\n  <button @click=\"getAmount\">getAmount</button>\n  <button @click=\"withdraw_supply\">withdraw_supply</button>\n</template>\n\n<script>\nimport * as nearAPI from \"near-api-js\";\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      nearConfig: {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: \"sub.duyhoag.testnet\",\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n      },\n      contract: null,\n      wallet:null,\n      near: null,\n    };\n  },\n  methods: {\n    increment() {\n      this.contract.test1().then(console.log);\n    },\n\n    supply(){\n      console.log(this.contract, 'aa')\n      this.contract.supply({}, 100000000000000, 2).then(console.log);\n    },\n\n    login() {\n      this.walletConnection.requestSignIn(\n        \"sub.duyhoag.testnet\",\n        \"Rust Counter Example\"\n      );\n    },\n    getAmount() {\n      this.contract.get_account().then(console.log);\n    },\n\n    withdraw_supply() {\n      this.contract.withdraw_supply({},100000000000000, 2000000000000000000000000).then(console.log)\n    },\n\n    async connect(nearConfig) {\n      // Connects to NEAR and provides `near`, `walletAccount` and `contract` objects in `this` scope\n      // Initializing connection to the NEAR node.\n      this.near = await nearAPI.connect({\n        deps: {\n          keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\n        },\n        ...nearConfig,\n      });\n\n      // Needed to access wallet login\n      this.walletConnection = new nearAPI.WalletConnection(this.near);\n\n      // Initializing our contract APIs by contract name and configuration.\n      this.contract = await new nearAPI.Contract(\n        this.walletConnection.account(),\n        nearConfig.contractName,\n        {\n          // View methods are read-only â€“ they don't modify the state, but usually return some value\n          viewMethods: [\"get_num\", \"get_total_pool_balance\", \"get_account\"],\n          // Change methods can modify the state, but you don't receive the returned value when called\n          changeMethods: [\"increment\", \"decrement\", \"reset\", \"supply\", \"withdraw_supply\"],\n          // Sender is the account ID to initialize transactions.\n          // getAccountId() will return empty string if user is still unauthorized\n          // sender: this.walletConnection.getAccountId()\n        }\n      );\n    },\n  },\n  async mounted() {\n    await this.connect(this.nearConfig);\n  },\n};\n</script>\n"],"sourceRoot":""}]}