{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2","program":"C:\\Users\\hoang\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","quickcheck","--edition=2018","C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"env_logger\"","--cfg","feature=\"log\"","--cfg","feature=\"regex\"","--cfg","feature=\"use_logging\"","-C","metadata=14fef7a4e1d7605d","-C","extra-filename=-14fef7a4e1d7605d","--out-dir","d:\\Blockchain\\NEARLend\\Source\\smart-contract\\target\\rls\\debug\\deps","-L","dependency=d:\\Blockchain\\NEARLend\\Source\\smart-contract\\target\\rls\\debug\\deps","--extern","env_logger=d:\\Blockchain\\NEARLend\\Source\\smart-contract\\target\\rls\\debug\\deps\\libenv_logger-9e438d720667569a.rmeta","--extern","log=d:\\Blockchain\\NEARLend\\Source\\smart-contract\\target\\rls\\debug\\deps\\liblog-d588e0e2c6fba683.rmeta","--extern","rand=d:\\Blockchain\\NEARLend\\Source\\smart-contract\\target\\rls\\debug\\deps\\librand-6428a9dbf6a1e1b3.rmeta","--extern","rand_core=d:\\Blockchain\\NEARLend\\Source\\smart-contract\\target\\rls\\debug\\deps\\librand_core-4b01005a1b8fda3b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\hoang\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Blockchain\\NEARLend\\Source\\smart-contract\\target\\rls\\debug\\deps\\libquickcheck-14fef7a4e1d7605d.rmeta"},"prelude":{"crate_id":{"name":"quickcheck","disambiguator":[17225999933390965019,0]},"crate_root":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src","external_crates":[{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7449352764569583903,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1631835697898691535,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9301228628034177852,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2093790580695599362,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6737091961566752624,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[5404310561352066988,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1962508984173027375,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6035099278034299636,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2965237822319993894,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18202861773354635365,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5256087510298979761,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9054181207765082768,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15345473809858678681,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":14,"id":{"name":"env_logger","disambiguator":[14176973910461116508,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":15,"id":{"name":"regex","disambiguator":[172685585645394991,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":16,"id":{"name":"regex_syntax","disambiguator":[14357203259311988187,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":17,"id":{"name":"aho_corasick","disambiguator":[2184394995421018672,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":18,"id":{"name":"memchr","disambiguator":[13550293095606170264,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":19,"id":{"name":"log","disambiguator":[8147994798723977603,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[8192637230878500941,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":21,"id":{"name":"rand","disambiguator":[12363888191764980961,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":22,"id":{"name":"rand_core","disambiguator":[5724431053403149932,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":23,"id":{"name":"getrandom","disambiguator":[10031556350694863026,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":24,"id":{"name":"rand_chacha","disambiguator":[10457849021149139687,0]}},{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","num":25,"id":{"name":"ppv_lite86","disambiguator":[15490896120547821508,0]}}],"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":2386,"line_start":1,"line_end":90,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":461,"byte_end":475,"line_start":18,"line_end":18,"column_start":5,"column_end":19},"alias_span":null,"name":"empty_shrinker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":477,"byte_end":492,"line_start":18,"line_end":18,"column_start":21,"column_end":36},"alias_span":null,"name":"single_shrinker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":494,"byte_end":503,"line_start":18,"line_end":18,"column_start":38,"column_end":47},"alias_span":null,"name":"Arbitrary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":505,"byte_end":508,"line_start":18,"line_end":18,"column_start":49,"column_end":52},"alias_span":null,"name":"Gen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":510,"byte_end":516,"line_start":18,"line_end":18,"column_start":54,"column_end":60},"alias_span":null,"name":"StdGen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":518,"byte_end":530,"line_start":18,"line_end":18,"column_start":62,"column_end":74},"alias_span":null,"name":"StdThreadGen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":559,"byte_end":569,"line_start":20,"line_end":20,"column_start":25,"column_end":35},"alias_span":null,"name":"quickcheck","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":571,"byte_end":581,"line_start":20,"line_end":20,"column_start":37,"column_end":47},"alias_span":null,"name":"QuickCheck","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":583,"byte_end":593,"line_start":20,"line_end":20,"column_start":49,"column_end":59},"alias_span":null,"name":"TestResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":595,"byte_end":603,"line_start":20,"line_end":20,"column_start":61,"column_end":69},"alias_span":null,"name":"Testable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":195},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":625,"byte_end":632,"line_start":21,"line_end":21,"column_start":20,"column_end":27},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":2386,"line_start":1,"line_end":90,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":422}],"decl_id":null,"docs":" This crate is a port of\n [Haskell's QuickCheck](https://hackage.haskell.org/package/QuickCheck).","sig":null,"attributes":[{"value":"/ This crate is a port of","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/ [Haskell's QuickCheck](https://hackage.haskell.org/package/QuickCheck).","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":28,"byte_end":103,"line_start":2,"line_end":2,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":104,"byte_end":107,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ For detailed examples, please see the","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":108,"byte_end":149,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/ [README](https://github.com/BurntSushi/quickcheck).","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\lib.rs","byte_start":150,"byte_end":205,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3310,"byte_end":3313,"line_start":32,"line_end":32,"column_start":11,"column_end":14},"name":"Gen","qualname":"::arbitrary::Gen","value":"Gen: RngCore","parent":null,"children":[{"krate":0,"index":183}],"decl_id":null,"docs":" `Gen` wraps a `rand::RngCore` with parameters to control the distribution of\n random values.","sig":null,"attributes":[{"value":"/ `Gen` wraps a `rand::RngCore` with parameters to control the distribution of","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3085,"byte_end":3165,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ random values.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3166,"byte_end":3184,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3185,"byte_end":3188,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A value with type satisfying the `Gen` trait can be constructed with the","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3189,"byte_end":3265,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ `gen` function in this crate.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3266,"byte_end":3299,"line_start":31,"line_end":31,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3332,"byte_end":3336,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"size","qualname":"::arbitrary::Gen::size","value":"pub fn size(&Self) -> usize","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3509,"byte_end":3515,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"StdGen","qualname":"::arbitrary::StdGen","value":"StdGen {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" StdGen is the default implementation of `Gen`.","sig":null,"attributes":[{"value":"/ StdGen is the default implementation of `Gen`.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3357,"byte_end":3407,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3408,"byte_end":3411,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Values of type `StdGen` can be created with the `gen` function in this","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3412,"byte_end":3486,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3487,"byte_end":3497,"line_start":39,"line_end":39,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3951,"byte_end":3954,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<StdGen<R>>::new","value":"pub fn new(R, usize) -> StdGen<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `StdGen` with the given configuration using any random number\n generator.","sig":null,"attributes":[{"value":"/ Returns a `StdGen` with the given configuration using any random number","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3586,"byte_end":3661,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ generator.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3666,"byte_end":3680,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3685,"byte_end":3688,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The `size` parameter controls the size of random values generated. For","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3693,"byte_end":3767,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ example, it specifies the maximum length of a randomly generated vector","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3772,"byte_end":3847,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and also will specify the maximum magnitude of a randomly generated","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3852,"byte_end":3923,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ number.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3928,"byte_end":3939,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4754,"byte_end":4766,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"StdThreadGen","qualname":"::arbitrary::StdThreadGen","value":"","parent":null,"children":[],"decl_id":null,"docs":" StdThreadGen is an RNG in thread-local memory.","sig":null,"attributes":[{"value":"/ StdThreadGen is an RNG in thread-local memory.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4640,"byte_end":4690,"line_start":82,"line_end":82,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4691,"byte_end":4694,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This is the default RNG used by quickcheck.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4695,"byte_end":4742,"line_start":84,"line_end":84,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5130,"byte_end":5133,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<StdThreadGen>::new","value":"pub fn new(usize) -> StdThreadGen","parent":null,"children":[],"decl_id":null,"docs":" Returns a new thread-local RNG.","sig":null,"attributes":[{"value":"/ Returns a new thread-local RNG.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4824,"byte_end":4859,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4864,"byte_end":4867,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The `size` parameter controls the size of random values generated. For","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4872,"byte_end":4946,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ example, it specifies the maximum length of a randomly generated vector","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4951,"byte_end":5026,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ and also will specify the maximum magnitude of a randomly generated","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5031,"byte_end":5102,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ number.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5107,"byte_end":5118,"line_start":93,"line_end":93,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5869,"byte_end":5883,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"empty_shrinker","qualname":"::arbitrary::empty_shrinker","value":"pub fn empty_shrinker<A: 'static>() -> Box<dyn Iterator<Item = A>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a shrinker with zero elements.\n","sig":null,"attributes":[{"value":"/ Creates a shrinker with zero elements.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5819,"byte_end":5861,"line_start":123,"line_end":123,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6009,"byte_end":6024,"line_start":129,"line_end":129,"column_start":8,"column_end":23},"name":"single_shrinker","qualname":"::arbitrary::single_shrinker","value":"pub fn single_shrinker<A: 'static>(A) -> Box<dyn Iterator<Item = A>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a shrinker with a single element.\n","sig":null,"attributes":[{"value":"/ Creates a shrinker with a single element.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5956,"byte_end":6001,"line_start":128,"line_end":128,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6674,"byte_end":6683,"line_start":145,"line_end":145,"column_start":11,"column_end":20},"name":"Arbitrary","qualname":"::arbitrary::Arbitrary","value":"Arbitrary: Clone + Send + 'static","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219}],"decl_id":null,"docs":" `Arbitrary` describes types whose values can be randomly generated and\n shrunk.","sig":null,"attributes":[{"value":"/ `Arbitrary` describes types whose values can be randomly generated and","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6109,"byte_end":6183,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/ shrunk.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6184,"byte_end":6195,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6196,"byte_end":6199,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Aside from shrinking, `Arbitrary` is different from the `std::Rand` trait","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6200,"byte_end":6277,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/ in that it uses a `Gen` to control the distribution of random values.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6278,"byte_end":6351,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6352,"byte_end":6355,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ As of now, all types that implement `Arbitrary` must also implement","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6356,"byte_end":6427,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/ `Clone`. (I'm not sure if this is a permanent restriction.)","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6428,"byte_end":6491,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6492,"byte_end":6495,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ They must also be sendable and static since every test is run in its own","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6496,"byte_end":6572,"line_start":142,"line_end":142,"column_start":1,"column_end":77}},{"value":"/ thread using `thread::Builder::spawn`, which requires the `Send + 'static`","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6573,"byte_end":6651,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"/ bounds.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6652,"byte_end":6663,"line_start":144,"line_end":144,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6717,"byte_end":6726,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"arbitrary","qualname":"::arbitrary::Arbitrary::arbitrary","value":"pub fn arbitrary<G: Gen>(&mut G) -> Self","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6763,"byte_end":6769,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"shrink","qualname":"::arbitrary::Arbitrary::shrink","value":"pub fn shrink(&Self) -> Box<dyn Iterator<Item = Self>>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":45645,"byte_end":45655,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"QuickCheck","qualname":"::tester::QuickCheck","value":"QuickCheck {  }","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"decl_id":null,"docs":" The main QuickCheck type for setting configuration and running QuickCheck.\n","sig":null,"attributes":[{"value":"/ The main QuickCheck type for setting configuration and running QuickCheck.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":45555,"byte_end":45633,"line_start":9,"line_end":9,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46963,"byte_end":46966,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<QuickCheck<StdThreadGen>>::new","value":"pub fn new() -> QuickCheck<StdThreadGen>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new QuickCheck value.","sig":null,"attributes":[{"value":"/ Creates a new QuickCheck value.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46516,"byte_end":46551,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46556,"byte_end":46559,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This can be used to run QuickCheck on things that implement","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46564,"byte_end":46627,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/ `Testable`. You may also adjust the configuration, such as","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46632,"byte_end":46694,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/ the number of tests to run.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46699,"byte_end":46730,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46735,"byte_end":46738,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ By default, the maximum number of passed tests is set to `100`,","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46743,"byte_end":46810,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ the max number of overall tests is set to `10000` and the generator","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46815,"byte_end":46886,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ is set to a `StdThreadGen` with a default size of `100`.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46891,"byte_end":46951,"line_start":58,"line_end":58,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47454,"byte_end":47459,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"tests","qualname":"<QuickCheck<G>>::tests","value":"pub fn tests(Self, u64) -> QuickCheck<G>","parent":null,"children":[],"decl_id":null,"docs":" Set the number of tests to run.","sig":null,"attributes":[{"value":"/ Set the number of tests to run.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47137,"byte_end":47172,"line_start":66,"line_end":66,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47177,"byte_end":47180,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This actually refers to the maximum number of *passed* tests that","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47185,"byte_end":47254,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ can occur. Namely, if a test causes a failure, future testing on that","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47259,"byte_end":47332,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ property stops. Additionally, if tests are discarded, there may be","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47337,"byte_end":47407,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ fewer than `tests` passed.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47412,"byte_end":47442,"line_start":71,"line_end":71,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47633,"byte_end":47641,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"with_gen","qualname":"<QuickCheck<G>>::with_gen","value":"pub fn with_gen(G) -> QuickCheck<G>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `QuickCheck` using the given generator.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `QuickCheck` using the given generator.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47553,"byte_end":47621,"line_start":77,"line_end":77,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48249,"byte_end":48258,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"max_tests","qualname":"<QuickCheck<G>>::max_tests","value":"pub fn max_tests(Self, u64) -> QuickCheck<G>","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of tests to run.","sig":null,"attributes":[{"value":"/ Set the maximum number of tests to run.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47997,"byte_end":48040,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48045,"byte_end":48048,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The number of invocations of a property will never exceed this number.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48053,"byte_end":48127,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ This is necessary to cap the number of tests because QuickCheck","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48132,"byte_end":48199,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/ properties can discard tests.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48204,"byte_end":48237,"line_start":95,"line_end":95,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48437,"byte_end":48440,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"gen","qualname":"<QuickCheck<G>>::gen","value":"pub fn gen<N: Gen>(Self, N) -> QuickCheck<N>","parent":null,"children":[],"decl_id":null,"docs":" Set the random number generator to be used by QuickCheck.\n","sig":null,"attributes":[{"value":"/ Set the random number generator to be used by QuickCheck.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48364,"byte_end":48425,"line_start":101,"line_end":101,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48988,"byte_end":49004,"line_start":113,"line_end":113,"column_start":12,"column_end":28},"name":"min_tests_passed","qualname":"<QuickCheck<G>>::min_tests_passed","value":"pub fn min_tests_passed(Self, u64) -> QuickCheck<G>","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum number of tests that needs to pass.","sig":null,"attributes":[{"value":"/ Set the minimum number of tests that needs to pass.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48763,"byte_end":48818,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48823,"byte_end":48826,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This actually refers to the minimum number of *valid* *passed* tests","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48831,"byte_end":48903,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ that needs to pass for the property to be considered successful.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":48908,"byte_end":48976,"line_start":112,"line_end":112,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49452,"byte_end":49461,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"quicktest","qualname":"<QuickCheck<G>>::quicktest","value":"pub fn quicktest<A>(&mut Self, A) -> Result<u64, TestResult> where A: Testable","parent":null,"children":[],"decl_id":null,"docs":" Tests a property and returns the result.","sig":null,"attributes":[{"value":"/ Tests a property and returns the result.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49131,"byte_end":49175,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49180,"byte_end":49183,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The result returned is either the number of tests passed or a witness","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49188,"byte_end":49261,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ of failure.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49266,"byte_end":49281,"line_start":121,"line_end":121,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49286,"byte_end":49289,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ (If you're using Rust's unit testing infrastructure, then you'll","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49294,"byte_end":49362,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ want to use the `quickcheck` method, which will `panic!` on failure.)","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":49367,"byte_end":49440,"line_start":124,"line_end":124,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50966,"byte_end":50976,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"quickcheck","qualname":"<QuickCheck<G>>::quickcheck","value":"pub fn quickcheck<A>(&mut Self, A) where A: Testable","parent":null,"children":[],"decl_id":null,"docs":" Tests a property and calls `panic!` on failure.","sig":null,"attributes":[{"value":"/ Tests a property and calls `panic!` on failure.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50014,"byte_end":50065,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50070,"byte_end":50073,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The `panic!` message will include a (hopefully) minimal witness of","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50078,"byte_end":50148,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ failure.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50153,"byte_end":50165,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50170,"byte_end":50173,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ It is appropriate to use this method with Rust's unit testing","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50178,"byte_end":50243,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/ infrastructure.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50248,"byte_end":50267,"line_start":149,"line_end":149,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50272,"byte_end":50275,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that if the environment variable `RUST_LOG` is set to enable","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50280,"byte_end":50349,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ `info` level log messages for the `quickcheck` crate, then this will","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50354,"byte_end":50426,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ include output on how many QuickCheck tests were passed.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50431,"byte_end":50491,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50496,"byte_end":50499,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50504,"byte_end":50517,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50522,"byte_end":50525,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50530,"byte_end":50541,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ use quickcheck::QuickCheck;","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50546,"byte_end":50577,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50582,"byte_end":50585,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ fn prop_reverse_reverse() {","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50590,"byte_end":50621,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/     fn revrev(xs: Vec<usize>) -> bool {","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50626,"byte_end":50669,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/         let rev: Vec<_> = xs.clone().into_iter().rev().collect();","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50674,"byte_end":50743,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/         let revrev: Vec<_> = rev.into_iter().rev().collect();","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50748,"byte_end":50813,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/         xs == revrev","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50818,"byte_end":50842,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50847,"byte_end":50856,"line_start":165,"line_end":165,"column_start":5,"column_end":14}},{"value":"/     QuickCheck::new().quickcheck(revrev as fn(Vec<usize>) -> bool);","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50861,"byte_end":50932,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50937,"byte_end":50942,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":50947,"byte_end":50954,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51735,"byte_end":51745,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"quickcheck","qualname":"::tester::quickcheck","value":"pub fn quickcheck<A: Testable>(A)","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for running QuickCheck.","sig":null,"attributes":[{"value":"/ Convenience function for running QuickCheck.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51615,"byte_end":51663,"line_start":192,"line_end":192,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51664,"byte_end":51667,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This is an alias for `QuickCheck::new().quickcheck(f)`.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51668,"byte_end":51727,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51971,"byte_end":51981,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"TestResult","qualname":"::tester::TestResult","value":"TestResult {  }","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"decl_id":null,"docs":" Describes the status of a single instance of a test.","sig":null,"attributes":[{"value":"/ Describes the status of a single instance of a test.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51806,"byte_end":51862,"line_start":199,"line_end":199,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51863,"byte_end":51866,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ All testable things must be capable of producing a `TestResult`.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":51867,"byte_end":51935,"line_start":201,"line_end":201,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52295,"byte_end":52301,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"passed","qualname":"<TestResult>::passed","value":"pub fn passed() -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Produces a test result that indicates the current test has passed.\n","sig":null,"attributes":[{"value":"/ Produces a test result that indicates the current test has passed.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52213,"byte_end":52283,"line_start":218,"line_end":218,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52449,"byte_end":52455,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"failed","qualname":"<TestResult>::failed","value":"pub fn failed() -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Produces a test result that indicates the current test has failed.\n","sig":null,"attributes":[{"value":"/ Produces a test result that indicates the current test has failed.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52367,"byte_end":52437,"line_start":223,"line_end":223,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52605,"byte_end":52610,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"error","qualname":"<TestResult>::error","value":"pub fn error<S: Into<String>>(S) -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Produces a test result that indicates failure from a runtime error.\n","sig":null,"attributes":[{"value":"/ Produces a test result that indicates failure from a runtime error.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52522,"byte_end":52593,"line_start":228,"line_end":228,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53020,"byte_end":53027,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"discard","qualname":"<TestResult>::discard","value":"pub fn discard() -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Produces a test result that instructs `quickcheck` to ignore it.\n This is useful for restricting the domain of your properties.\n When a test is discarded, `quickcheck` will replace it with a\n fresh one (up to a certain limit).\n","sig":null,"attributes":[{"value":"/ Produces a test result that instructs `quickcheck` to ignore it.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52757,"byte_end":52825,"line_start":235,"line_end":235,"column_start":5,"column_end":73}},{"value":"/ This is useful for restricting the domain of your properties.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52830,"byte_end":52895,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ When a test is discarded, `quickcheck` will replace it with a","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52900,"byte_end":52965,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/ fresh one (up to a certain limit).","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52970,"byte_end":53008,"line_start":238,"line_end":238,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53300,"byte_end":53309,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"from_bool","qualname":"<TestResult>::from_bool","value":"pub fn from_bool(bool) -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Converts a `bool` to a `TestResult`. A `true` value indicates that\n the test has passed and a `false` value indicates that the test\n has failed.\n","sig":null,"attributes":[{"value":"/ Converts a `bool` to a `TestResult`. A `true` value indicates that","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53126,"byte_end":53196,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/ the test has passed and a `false` value indicates that the test","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53201,"byte_end":53268,"line_start":244,"line_end":244,"column_start":5,"column_end":72}},{"value":"/ has failed.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53273,"byte_end":53288,"line_start":245,"line_end":245,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53622,"byte_end":53631,"line_start":256,"line_end":256,"column_start":12,"column_end":21},"name":"must_fail","qualname":"<TestResult>::must_fail","value":"pub fn must_fail<T, F>(F) -> TestResult where F: FnOnce() -> T, F: Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Tests if a \"procedure\" fails when executed. The test passes only if\n `f` generates a task failure during its execution.\n","sig":null,"attributes":[{"value":"/ Tests if a \"procedure\" fails when executed. The test passes only if","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53480,"byte_end":53551,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/ `f` generates a task failure during its execution.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53556,"byte_end":53610,"line_start":255,"line_end":255,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53968,"byte_end":53978,"line_start":268,"line_end":268,"column_start":12,"column_end":22},"name":"is_failure","qualname":"<TestResult>::is_failure","value":"pub fn is_failure(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if this test result describes a failing\n test.\n","sig":null,"attributes":[{"value":"/ Returns `true` if and only if this test result describes a failing","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53872,"byte_end":53942,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ test.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":53947,"byte_end":53956,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54236,"byte_end":54244,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"is_error","qualname":"<TestResult>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if this test result describes a failing\n test as a result of a run time error.\n","sig":null,"attributes":[{"value":"/ Returns `true` if and only if this test result describes a failing","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54108,"byte_end":54178,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/ test as a result of a run time error.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54183,"byte_end":54224,"line_start":276,"line_end":276,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55304,"byte_end":55312,"line_start":308,"line_end":308,"column_start":11,"column_end":19},"name":"Testable","qualname":"::tester::Testable","value":"Testable: Send + 'static","parent":null,"children":[{"krate":0,"index":495}],"decl_id":null,"docs":" `Testable` describes types (e.g., a function) whose values can be\n tested.","sig":null,"attributes":[{"value":"/ `Testable` describes types (e.g., a function) whose values can be","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54768,"byte_end":54837,"line_start":297,"line_end":297,"column_start":1,"column_end":70}},{"value":"/ tested.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54838,"byte_end":54849,"line_start":298,"line_end":298,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54850,"byte_end":54853,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ Anything that can be tested must be capable of producing a `TestResult`","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54854,"byte_end":54929,"line_start":300,"line_end":300,"column_start":1,"column_end":76}},{"value":"/ given a random number generator. This is trivial for types like `bool`,","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":54930,"byte_end":55005,"line_start":301,"line_end":301,"column_start":1,"column_end":76}},{"value":"/ which are just converted to either a passing or failing test result.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55006,"byte_end":55078,"line_start":302,"line_end":302,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55079,"byte_end":55082,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ For functions, an implementation must generate random arguments","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55083,"byte_end":55150,"line_start":304,"line_end":304,"column_start":1,"column_end":68}},{"value":"/ and potentially shrink those arguments if they produce a failure.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55151,"byte_end":55220,"line_start":305,"line_end":305,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55221,"byte_end":55224,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ It's unlikely that you'll have to implement this trait yourself.","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55225,"byte_end":55293,"line_start":307,"line_end":307,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55338,"byte_end":55344,"line_start":309,"line_end":309,"column_start":8,"column_end":14},"name":"result","qualname":"::tester::Testable::result","value":"pub fn result<G: Gen>(&Self, &mut G) -> TestResult","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3570,"byte_end":3576,"line_start":45,"line_end":45,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4069,"byte_end":4075,"line_start":58,"line_end":58,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4571,"byte_end":4577,"line_start":76,"line_end":76,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4805,"byte_end":4817,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5260,"byte_end":5272,"line_start":99,"line_end":99,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5745,"byte_end":5757,"line_start":117,"line_end":117,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":7239,"byte_end":7245,"line_start":173,"line_end":173,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":7758,"byte_end":7764,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":9980,"byte_end":9983,"line_start":269,"line_end":269,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":10745,"byte_end":10756,"line_start":295,"line_end":295,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":11763,"byte_end":11774,"line_start":328,"line_end":328,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":13657,"byte_end":13665,"line_start":383,"line_end":383,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":14216,"byte_end":14223,"line_start":401,"line_end":401,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":14622,"byte_end":14630,"line_start":414,"line_end":414,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":15034,"byte_end":15044,"line_start":426,"line_end":426,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":15557,"byte_end":15564,"line_start":443,"line_end":443,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":15944,"byte_end":15954,"line_start":456,"line_end":456,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":16381,"byte_end":16389,"line_start":470,"line_end":470,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":16773,"byte_end":16779,"line_start":482,"line_end":482,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17033,"byte_end":17041,"line_start":493,"line_end":493,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17180,"byte_end":17188,"line_start":499,"line_end":499,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17470,"byte_end":17480,"line_start":514,"line_end":514,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17621,"byte_end":17633,"line_start":520,"line_end":520,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17778,"byte_end":17790,"line_start":526,"line_end":526,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17953,"byte_end":17960,"line_start":532,"line_end":532,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":19636,"byte_end":19644,"line_start":581,"line_end":581,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":19969,"byte_end":19975,"line_start":592,"line_end":592,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":31076,"byte_end":31084,"line_start":949,"line_end":949,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":31352,"byte_end":31357,"line_start":958,"line_end":958,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":32030,"byte_end":32035,"line_start":979,"line_end":979,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":32386,"byte_end":32400,"line_start":990,"line_end":990,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":32809,"byte_end":32818,"line_start":1003,"line_end":1003,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33113,"byte_end":33120,"line_start":1012,"line_end":1012,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33405,"byte_end":33421,"line_start":1021,"line_end":1021,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33691,"byte_end":33700,"line_start":1030,"line_end":1030,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33793,"byte_end":33801,"line_start":1036,"line_end":1036,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":34286,"byte_end":34289,"line_start":1052,"line_end":1052,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":34542,"byte_end":34545,"line_start":1062,"line_end":1062,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":34777,"byte_end":34787,"line_start":1072,"line_end":1072,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46485,"byte_end":46495,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47117,"byte_end":47127,"line_start":65,"line_end":65,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52196,"byte_end":52206,"line_start":217,"line_end":217,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55651,"byte_end":55661,"line_start":324,"line_end":324,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55774,"byte_end":55780,"line_start":330,"line_end":330,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":58848,"byte_end":58849,"line_start":430,"line_end":430,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3315,"byte_end":3322,"line_start":32,"line_end":32,"column_start":16,"column_end":23},"kind":"SuperTrait","from":{"krate":22,"index":195},"to":{"krate":0,"index":182}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":3570,"byte_end":3576,"line_start":45,"line_end":45,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4069,"byte_end":4075,"line_start":58,"line_end":58,"column_start":30,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":184},"to":{"krate":22,"index":195}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4571,"byte_end":4577,"line_start":76,"line_end":76,"column_start":26,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":182}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":4805,"byte_end":4817,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5260,"byte_end":5272,"line_start":99,"line_end":99,"column_start":18,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":200},"to":{"krate":22,"index":195}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":5745,"byte_end":5757,"line_start":117,"line_end":117,"column_start":14,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":200},"to":{"krate":0,"index":182}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6685,"byte_end":6690,"line_start":145,"line_end":145,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2637},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":6693,"byte_end":6697,"line_start":145,"line_end":145,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":7239,"byte_end":7245,"line_start":173,"line_end":173,"column_start":34,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":2,"index":43434},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":7758,"byte_end":7764,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":43560},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":9980,"byte_end":9983,"line_start":269,"line_end":269,"column_start":34,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":10745,"byte_end":10756,"line_start":295,"line_end":295,"column_start":20,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":11763,"byte_end":11774,"line_start":328,"line_end":328,"column_start":22,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":13657,"byte_end":13665,"line_start":383,"line_end":383,"column_start":54,"column_end":62},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":1378},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":14216,"byte_end":14223,"line_start":401,"line_end":401,"column_start":21,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":1089},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":14622,"byte_end":14630,"line_start":414,"line_end":414,"column_start":40,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":7443},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":15034,"byte_end":15044,"line_start":426,"line_end":426,"column_start":40,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":788},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":15557,"byte_end":15564,"line_start":443,"line_end":443,"column_start":21,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":1806},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":15944,"byte_end":15954,"line_start":456,"line_end":456,"column_start":34,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":3352},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":16381,"byte_end":16389,"line_start":470,"line_end":470,"column_start":34,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":4159},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":16773,"byte_end":16779,"line_start":482,"line_end":482,"column_start":20,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":10020},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17033,"byte_end":17041,"line_start":493,"line_end":493,"column_start":20,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":10044},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17180,"byte_end":17188,"line_start":499,"line_end":499,"column_start":20,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":10047},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17470,"byte_end":17480,"line_start":514,"line_end":514,"column_start":20,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":9990},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17621,"byte_end":17633,"line_start":520,"line_end":520,"column_start":20,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":10014},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17778,"byte_end":17790,"line_start":526,"line_end":526,"column_start":20,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":10017},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":17953,"byte_end":17960,"line_start":532,"line_end":532,"column_start":20,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6203},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":19636,"byte_end":19644,"line_start":581,"line_end":581,"column_start":20,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":2780},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":19969,"byte_end":19975,"line_start":592,"line_end":592,"column_start":20,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":31076,"byte_end":31084,"line_start":949,"line_end":949,"column_start":34,"column_end":42},"kind":{"Impl":{"id":49}},"from":{"krate":2,"index":24939},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":31352,"byte_end":31357,"line_start":958,"line_end":958,"column_start":34,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":2,"index":42108},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":32030,"byte_end":32035,"line_start":979,"line_end":979,"column_start":55,"column_end":60},"kind":{"Impl":{"id":51}},"from":{"krate":2,"index":41993},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":32386,"byte_end":32400,"line_start":990,"line_end":990,"column_start":55,"column_end":69},"kind":{"Impl":{"id":52}},"from":{"krate":2,"index":42062},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":32809,"byte_end":32818,"line_start":1003,"line_end":1003,"column_start":55,"column_end":64},"kind":{"Impl":{"id":53}},"from":{"krate":2,"index":42018},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33113,"byte_end":33120,"line_start":1012,"line_end":1012,"column_start":55,"column_end":62},"kind":{"Impl":{"id":54}},"from":{"krate":2,"index":42039},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33405,"byte_end":33421,"line_start":1021,"line_end":1021,"column_start":55,"column_end":71},"kind":{"Impl":{"id":55}},"from":{"krate":2,"index":42085},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33691,"byte_end":33700,"line_start":1030,"line_end":1030,"column_start":20,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":41977},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":33793,"byte_end":33801,"line_start":1036,"line_end":1036,"column_start":20,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":2,"index":46026},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":34286,"byte_end":34289,"line_start":1052,"line_end":1052,"column_start":34,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":34542,"byte_end":34545,"line_start":1062,"line_end":1062,"column_start":41,"column_end":44},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":5966},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\arbitrary.rs","byte_start":34777,"byte_end":34787,"line_start":1072,"line_end":1072,"column_start":20,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":1,"index":10935},"to":{"krate":0,"index":216}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":46485,"byte_end":46495,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":47117,"byte_end":47127,"line_start":65,"line_end":65,"column_start":14,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":52196,"byte_end":52206,"line_start":217,"line_end":217,"column_start":6,"column_end":16},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55314,"byte_end":55318,"line_start":308,"line_end":308,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":494}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55651,"byte_end":55661,"line_start":324,"line_end":324,"column_start":19,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1003},"to":{"krate":0,"index":494}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":55774,"byte_end":55780,"line_start":330,"line_end":330,"column_start":25,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":43560},"to":{"krate":0,"index":494}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":58790,"byte_end":58799,"line_start":429,"line_end":429,"column_start":14,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":216},"to":{"krate":0,"index":518}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":58802,"byte_end":58807,"line_start":429,"line_end":429,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":9401},"to":{"krate":0,"index":518}},{"span":{"file_name":"C:\\Users\\hoang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quickcheck-0.9.2\\src\\tester.rs","byte_start":58848,"byte_end":58849,"line_start":430,"line_end":430,"column_start":38,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":520},"to":{"krate":0,"index":518}}]}